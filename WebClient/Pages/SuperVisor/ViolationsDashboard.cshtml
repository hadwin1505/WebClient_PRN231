@page
@model WebClient.Pages.SuperVisor.ViolationsDashboardModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Violations Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }

        .container {
            padding: 20px;
            background-color: #ffffff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            margin-top: 20px;
        }

        h1 {
            margin-bottom: 20px;
            color: #333;
        }

        .table {
            border-collapse: separate;
            border-spacing: 0 8px;
            width: 100%;
        }

            .table th,
            .table td {
                border: 1px solid #dee2e6;
                border-style: solid none;
                padding: 12px;
                vertical-align: middle;
            }

                .table th:first-child,
                .table td:first-child {
                    border-left-style: solid;
                    border-top-left-radius: 5px;
                    border-bottom-left-radius: 5px;
                }

                .table th:last-child,
                .table td:last-child {
                    border-right-style: solid;
                    border-top-right-radius: 5px;
                    border-bottom-right-radius: 5px;
                }

            .table th {
                background-color: #f8f9fa;
                border-bottom: 2px solid #dee2e6;
                font-weight: bold;
                color: #495057;
            }

            .table tr {
                background-color: #ffffff;
            }

                .table tr:hover {
                    background-color: #f8f9fa;
                }

        .class-tag {
            background-color: #e9ecef;
            color: #007bff;
            padding: 2px 6px;
            border-radius: 4px;
            font-size: 0.9em;
        }

        .status-approved {
            color: #28a745;
            font-weight: bold;
        }

        .violation-type {
            color: #17a2b8;
        }

        .action-buttons {
            display: flex;
            gap: 5px;
        }

        .btn-sm {
            padding: 0.25rem 0.5rem;
            font-size: 0.875rem;
        }

        .modal-content {
            border-radius: 0.3rem;
        }

        .modal-header {
            background-color: #f8f9fa;
            border-bottom: 1px solid #dee2e6;
        }

        .modal-title {
            color: #495057;
        }

        .modal-body {
            padding: 20px;
        }

        .form-label {
            font-weight: bold;
            color: #495057;
        }

        .form-control {
            border-radius: 0.25rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Violations Dashboard</h1>

        <button class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#createModal">Add Violation</button>

        <table class="table">
            <thead>
                <tr>
                    <th style="width: 5%;">ID</th>
                    <th style="width: 15%;">Student</th>
                    <th style="width: 15%;">Name</th>
                    <th style="width: 10%;">Date</th>
                    <th style="width: 10%;">Class</th>
                    <th style="width: 15%;">Group</th>
                    <th style="width: 10%;">Status</th>
                    <th style="width: 15%;">Type</th>
                    <th style="width: 5%;">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var violation in Model.Violations)
                {
                    <tr>
                        <td>@violation.ViolationId</td>
                        <td>@violation.StudentName</td>
                        <td>@violation.ViolationName</td>
                        <td>@violation.Date.ToShortDateString()</td>
                        <td>
                            @(Model.ClassNames.TryGetValue(violation.ClassId, out var className) ? className : "Unknown")
                        </td>
                        <td>@violation.ViolationGroupName</td>
                        <td><span class="status-approved">@violation.Status</span></td>
                        <td><span class="violation-type">@violation.ViolationTypeName</span></td>
                        <td>
                            <div class="action-buttons">
                                <button class="btn btn-sm btn-info" onclick="window.location.href='/SuperVisor/ViolationDetails?id=@violation.ViolationId'"><i class="fas fa-eye"></i></button>
                                <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#editModal" data-id="@violation.ViolationId"><i class="fas fa-edit"></i></button>
                                <button class="btn btn-danger btn-sm" data-id="@violation.ViolationId"><i class="fas fa-trash"></i></button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Create Modal -->
    <div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="createModalLabel">Add Violation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="createForm">
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <input type="text" class="form-control" id="description" required>
                        </div>
                        <div class="mb-3">
                            <label for="date" class="form-label">Date</label>
                            <input type="date" class="form-control" id="date" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Edit Violation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editForm">
                        <input type="hidden" id="editId">
                        <div class="mb-3">
                            <label for="editDescription" class="form-label">Description</label>
                            <input type="text" class="form-control" id="editDescription" required>
                        </div>
                        <div class="mb-3">
                            <label for="editDate" class="form-label">Date</label>
                            <input type="date" class="form-control" id="editDate" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Assuming you already have an API to get class details -->
    <script>
        $(document).ready(function () {
            // Fetch class names
            $.ajax({
                url: 'http://localhost:8001/api/classes?sortOrder=asc', // Đổi URL theo API thực tế của bạn
                type: 'GET',
                success: function (response) {
                    // Map class IDs to names
                    const classMap = response.data.reduce((map, classObj) => {
                        map[classObj.classId] = classObj.name;
                        return map;
                    }, {});

                    // Update table rows with class names
                    $('table tbody tr').each(function () {
                        const classId = $(this).find('td').eq(4).text(); // Lấy giá trị ClassId từ cột thứ 5
                        const className = classMap[classId];
                        if (className) {
                            $(this).find('td').eq(4).html(`<span class="class-tag">${className}</span>`);
                        }
                    });
                },
                error: function (error) {
                    console.log('Error fetching classes:', error);
                }
            });

            // Xử lý gửi form tạo mới vi phạm
            $('#createForm').on('submit', function (e) {
                e.preventDefault();
                const description = $('#description').val();
                const date = $('#date').val();

                $.ajax({
                    url: '/api/violations',
                    type: 'POST',
                    data: JSON.stringify({ description, date }),
                    contentType: 'application/json',
                    success: function () {
                        $('#createModal').modal('hide');
                        location.reload();
                    },
                    error: function (error) {
                        console.log('Error creating violation:', error);
                    }
                });
            });

            // Xử lý nút chỉnh sửa
            $('#editModal').on('show.bs.modal', function (e) {
                const button = $(e.relatedTarget);
                const id = button.data('id');
                $('#editId').val(id);

                // Fetch violation details for editing
                $.ajax({
                    url: '/api/violations/' + id,
                    type: 'GET',
                    success: function (violation) {
                        $('#editDescription').val(violation.description);
                        $('#editDate').val(violation.date);
                    },
                    error: function (error) {
                        console.log('Error fetching violation details:', error);
                    }
                });
            });

            // Xử lý gửi form chỉnh sửa
            $('#editForm').on('submit', function (e) {
                e.preventDefault();
                const id = $('#editId').val();
                const description = $('#editDescription').val();
                const date = $('#editDate').val();

                $.ajax({
                    url: '/api/violations/' + id,
                    type: 'PUT',
                    data: JSON.stringify({ description, date }),
                    contentType: 'application/json',
                    success: function () {
                        $('#editModal').modal('hide');
                        location.reload();
                    },
                    error: function (error) {
                        console.log('Error updating violation:', error);
                    }
                });
            });

            // Xử lý nút xóa
            $(document).on('click', '.btn-danger', function () {
                const id = $(this).data('id');

                $.ajax({
                    url: '/api/violations/' + id,
                    type: 'DELETE',
                    success: function () {
                        location.reload();
                    },
                    error: function (error) {
                        console.log('Error deleting violation:', error);
                    }
                });
            });
        });
    </script>


</body>
</html>